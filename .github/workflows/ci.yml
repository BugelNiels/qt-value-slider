name: C++ CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Install packages
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y build-essential cmake cppcheck clang-format libgtest-dev python3-pip
          pip install cmakelint
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.*'
          cache: 'true'
          cache-key-prefix: 'install-qt6-action'

      # cppcheck
      - name: cppcheck
        run: |
          cppcheck --enable=all --inconclusive --std=c++17 --force . 2> cppcheck-report.txt || true

      # Upload cppcheck
      - name: cppcheck report
        uses: actions/upload-artifact@v4
        with:
          name: cppcheck-report
          path: cppcheck-report.txt

      # clang-format
      - name: clang-format
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git-clang-format origin/${{ github.event.pull_request.base.ref }} --diff --quiet || exit 1

      # cmakelint
      - name: cmakelint
        run: |
          find . -name 'CMakeLists.txt' -o -name '*.cmake' | xargs cmakelint --linelength=120

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Install packages
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake libgtest-dev
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.*'
          cache: 'true'
          cache-key-prefix: 'install-qt6-action'

      # Build
      - name: Build
        run: |
          mkdir build
          cmake -S . -B build -DBUILD_TESTS=ON
          cmake --build build

      # Test
      - name: Run unit tests
        run: cd build && QT_QPA_PLATFORM="offscreen" ctest --output-on-failure --verbose
  build-without-tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Install packages
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.*'
          cache: 'true'
          cache-key-prefix: 'install-qt6-action'

      # Build
      - name: build
        run: |
          mkdir build
          cmake -S . -B build -DBUILD_TESTS=OFF
          cmake --build build
  build-qt5:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Install packages
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake libgtest-dev
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.15.*'
          cache: 'false'
          cache-key-prefix: 'install-qt5-action'

      # Build
      - name: Build
        run: |
          mkdir build
          cmake -S . -B build -DBUILD_TESTS=ON
          cmake --build build

      # Test
      - name: Run unit tests
        run: cd build && QT_QPA_PLATFORM="offscreen" ctest --output-on-failure --verbose
